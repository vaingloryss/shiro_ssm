<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-4.3.xsd">

    <!-- 整合mybaits，事务控制等 配置不变 -->
    <!-- 添加配置 -->
    <!-- shiro -->
    <!-- 声明realm -->
    <bean id="customJdbcRealm" class="com.vainglory.realm.CustomJdbcRealm">
        <property name="userService" ref="userServiceImpl"/>
        <property name="roleService" ref="roleServiceImpl"/>
        <property name="permissionService" ref="permissionServiceImpl"/>
        <!-- 此属性如果通过注解注入，则需要将注解加载set方法上，不能用在属性上。
             此属性是父类属性，所以只有在set方法上注入，才能覆盖父类属性值。-->
        <property name="credentialsMatcher">
            <bean class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
                <property name="hashAlgorithmName" value="SHA-256"/>
                <!-- true means hex encoded, false means base64 encoded -->
                <property name="storedCredentialsHexEncoded" value="false"/>
                <property name="hashIterations" value="1000"/>
            </bean>
        </property>
    </bean>
    <!-- 声明SecurityManager -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="customJdbcRealm"/>
    </bean>
    <!-- 生产SpringShiroFilter
         （ 持有shiro的过滤相关规则，可进行请求的过滤校验，校验请求是否合法 ）
    -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <!--核心注入对象-->
        <property name="securityManager" ref="securityManager"/>

        <property name="loginUrl" value="/userController/login"/>
        <property name="unauthorizedUrl" value="/userController/error"/>
        <!--过滤器链-->
        <property name="filterChainDefinitions">
            <value>
                /userController/login = anon
                /userController/getScoreList = anon
                /userController/updateScore=authc,perms["scoreItem:update"]
                /userController/deleteScore=authc,perms["scoreItem:delete"]
                /userController/logout=logout
            </value>
        </property>
    </bean>
</beans>